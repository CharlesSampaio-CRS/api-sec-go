definitions:
  models.Message:
    properties:
      message:
        example: message....
        type: string
    type: object
  models.Token:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  models.User:
    properties:
      created_at:
        description: Timestamp when the user was created
        type: string
      email:
        description: Email address of the user
        type: string
      googleId:
        description: Google OAuth ID (if user signed up with Google)
        type: string
      id:
        description: User ID (MongoDB ObjectID as hex string)
        type: string
      name:
        description: Full name of the user
        type: string
      password:
        description: Password hash (not returned in responses)
        type: string
      plan:
        description: Subscription plan of the user (e.g. "free", "premium")
        type: string
      type:
        description: User type (e.g. "user", "admin")
        type: string
      updated_at:
        description: Timestamp when the user was last updated
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/update:
    put:
      consumes:
      - application/json
      description: Update the authenticated user's profile (name, plan, password)
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User update data
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Invalid input or no valid fields
          schema:
            $ref: '#/definitions/models.Message'
        "401":
          description: Invalid token or claims
          schema:
            $ref: '#/definitions/models.Message'
        "403":
          description: Unauthorized to update this user
          schema:
            $ref: '#/definitions/models.Message'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/models.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Message'
      summary: Update user profile
      tags:
      - User
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token returned
          schema:
            $ref: '#/definitions/models.Token'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.Message'
        "401":
          description: Invalid credentials or password
          schema:
            $ref: '#/definitions/models.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Message'
      summary: User login
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, password, name, and optional plan
        and type
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Invalid input or email format
          schema:
            $ref: '#/definitions/models.Message'
        "409":
          description: User with this email already exists
          schema:
            $ref: '#/definitions/models.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Message'
      summary: Register a new user
      tags:
      - Auth
swagger: "2.0"
